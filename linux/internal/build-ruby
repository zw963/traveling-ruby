#!/bin/bash
set -e
source /system_shared/library.sh

header "Preparing"
if [[ "$ARCHITECTURE" = x86 ]]; then
	CHROOT_NAME=epel-6-i386
else
	CHROOT_NAME=epel-6-x86_64
fi
MOCK_NAME="$CHROOT_NAME-$RUBY_VERSION-$ARCHITECTURE"

ROOT=/var/lib/mock/$MOCK_NAME/root
run rm -rf $ROOT/system $ROOT/output
run mkdir $ROOT/system $ROOT/output
run cp -R /system/* $ROOT/system/
run cp -R /system_shared/* $ROOT/system/
run rm -rf $ROOT/system/gemfiles
if [[ -e /gemfiles ]]; then
	run cp -R /gemfiles $ROOT/system/
fi
echo "Dumping parameters"
echo $ARCHITECTURE > $ROOT/system/NAME
echo $APP_UID > $ROOT/system/APP_UID
echo $APP_GID > $ROOT/system/APP_GID
echo $RUBY_VERSION > $ROOT/system/RUBY_VERSION
echo $BUNDLER_VERSION > $ROOT/system/BUNDLER_VERSION
echo $CONCURRENCY > $ROOT/system/CONCURRENCY
echo $SETUP_SOURCE > $ROOT/system/SETUP_SOURCE
echo $COMPILE > $ROOT/system/COMPILE
echo $SANITY_CHECK_OUTPUT > $ROOT/system/SANITY_CHECK_OUTPUT
echo $DEBUG_SHELL > $ROOT/system/DEBUG_SHELL
echo "Entering mock chroot"
run /system/setuser app /usr/bin/mock \
	-r $CHROOT_NAME \
	--uniqueext "$RUBY_VERSION-$ARCHITECTURE" \
	--quiet \
	--shell \
	/system/build-ruby-inside-mock
echo "Left mock chroot"
echo

header "Finalizing"
run chown $APP_UID:$APP_GID /output
run cp -dpR $ROOT/output/* /output/
run rm -rf $ROOT/system $ROOT/output
